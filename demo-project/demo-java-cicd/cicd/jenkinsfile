def lastHash
def releaseTag
def giteaHost = 'http://gitea.local.katipwork.com/'
def repo = 'demo-organization/demo-project'
def asset
pipeline {
  agent none

  environment {
    BRANCH = "${scm.branches[0].name}"
  }
  
  tools {
    jdk '8.0.402-tem'
    maven 'maven3'
  } 

  stages {
    stage('pull project') {
        agent any
        steps {
            git credentialsId: 'gitea-admin-jenkins', branch: "$BRANCH", url: 'http://gitea.local.katipwork.com/demo-organization/demo-project'
        }
    }

    stage('get all branches') {
        agent any
        steps {
            script {
                sh 'git branch --all'
            }
        }
    }

    stage('get last tag and last hash and checkout') {
        agent any
        steps {
            script {
                lastHash = sh(returnStdout: true, script: 'git rev-parse HEAD | cut -c1-8').trim()
            }
        }
    }


    stage('sonarqube analysis') {
      agent any

      steps {    
        withSonarQubeEnv(credentialsId: 'sonarqube_secret_token', installationName: 'sonar.local.katipwork.com') {
            sh "mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.7.0.1746:sonar \
                -Dsonar.projectKey=demo-project \
                -Dsonar.host.url=${env.SONAR_HOST_URL} \
                -Dsonar.login=${env.SONAR_AUTH_TOKEN}"
        }
      }
    }

    stage('build') {
        agent any
        
        steps {
            script {
                sh 'mvn clean install'
            }
        }
    }


    stage('release') {
        agent any
        steps {
            script {
                def snapshot = sh(returnStdout: true, script: 'realpath ./target/*.war').trim()
                releaseTag = "release-${lastHash}"

                def warfile = "dhiplaos-webapp-${releaseTag}.war"
                sh "cp ${snapshot} ./${warfile}"
                sh "tea releases create --repo '$repo' --title '$releaseTag' --tag '$releaseTag' -a './$warfile' || true"

                asset = sh(returnStdout: true, script: "curl -X GET '$giteaHost/api/v1/repos/$repo/releases/tags/$releaseTag' -H \'accept: application/json\' | jq -r \'.assets[0].browser_download_url\'")
                echo "$asset"
            }
        }
    }

    stage('deploy') {
        agent {
            label 'windows' 
        }

        steps {
            script {
                dir('C:\\apps\\') {
                    def output = "${releaseTag}.war";
                    bat("curl.exe --silent --output ${output} ${asset}")

                    catchError(buildResult: 'SUCCESS', stageResult: 'UNSTABLE') {
                        bat("asadmin undeploy demoapp")
                    }
                    
                    bat("asadmin deploy --name demoapp --virtualservers server --contextroot / ${output}")
                }                
            }
        }
    }
    
  }
}
